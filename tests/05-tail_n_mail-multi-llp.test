#!perl

## Test different log_line_prefixes in the same config file

use 5.006;
use strict;
use warnings;
use Data::Dumper;
use lib 't','.';
use Test::More tests => 5;

use vars qw{ $info $t };

sub run {

	my $conf = shift or die "Must supply a config file!\n";

	my $options = shift || '';

	my $COM = "perl tail_n_mail --dryrun --no-tailnmailrc --offset=0 $conf $options";

	my $result = '';
	eval {
		$result = qx{$COM 2>&1};
	};
	return $@ ? "OOPS: $@\n" : $result;
}

my $host = qx{hostname};
chomp $host;

###
$info = run('tests/config/testconfig-tail_n_mail.9');
###

$t = q{Test config 9 produces correct Subject line};
my $headers = $info =~ /(Subject: .+?)\n\n/s ? $1 : '<no headers>';
like ($headers, qr{^Subject: Acme $host Postgres errors 3 : 7$}m, $t);

my $summary = $info =~ /(Date: .+?)\n\n/s ? $1 : '<no summary>';

$t = q{Test config 1 produces correct 'Matches from' line for file A};
like ($summary, qr{^\QMatches from [A] tests/logs/testlog91.txt: 3\E$}m, $t);

$t = q{Test config 1 produces correct 'Matches from' line for file B};
like ($summary, qr{^\QMatches from [B] tests/logs/testlog92.txt: 1\E$}m, $t);

$t = q{Test config 1 produces correct 'Matches from' line for file C};
like ($summary, qr{^\QMatches from [C] tests/logs/testlog93.txt: 3\E$}m, $t);

$t = q{The log_line_prefix_regex works as intended};
my $chunk = $info =~ /(\[3\].+?\n)\n/s ? $1 : '<no third match>';
like ($chunk, qr{From B\nbuffy\@sunnydale \[[0-9]+\]}, $t);

exit;
